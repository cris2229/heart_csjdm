@page "/qrcodegenerator"
@using Microsoft.AspNetCore
@using System.Drawing;
@using QRCoder;
@using System.Drawing.Imaging;
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer
<h3>QR Code Generator</h3>

<input type="text" @bind="qrCodeData" placeholder="Enter data to encode" />
<button @onclick="GenerateQRCodes">Generate QR Code</button>

<div id="qrcode"></div>

@code {
    private string qrCodeData = "";

    private async Task GenerateQRCodes()
    {
        if (!string.IsNullOrEmpty(qrCodeData) || !qrCodeData.Equals("N/A"))
        {
            QRCodeGenerator qrGenerator = new QRCodeGenerator();
            QRCodeData qrCodeData = qrGenerator.CreateQrCode(this.qrCodeData, QRCodeGenerator.ECCLevel.Q);
            QRCode qrCode = new QRCode(qrCodeData);
            Bitmap qrCodeImage = qrCode.GetGraphic(20);

            // Convert the Bitmap to Base64 string
            using (MemoryStream stream = new MemoryStream())
            {
                qrCodeImage.Save(stream, ImageFormat.Png);
                var bytes = stream.ToArray();
                var base64 = Convert.ToBase64String(bytes);
                var imgSrc = $"data:image/png;base64,{base64}";

                // Update the HTML element with the generated QR code image
                await JSRuntime.InvokeVoidAsync("updateQRCode", imgSrc);
            }
        }
    }
}